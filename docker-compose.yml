version: "3.8"

networks:
  cargo-net:
    external: true

services:
  cargo-db:
    image: postgres:13
    hostname: cargo-db
    container_name: cargo-db
    restart: always
    networks:
      - cargo-net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=cargo
    tty: true
    volumes:
      - ./.docker/cargo-db:/var/lib/postgresql/data

  quote:
    hostname: quote
    container_name: quote
    build:
      context: services/quote
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/quote:/usr/src/app
      - $PWD/services/quote/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - PORT=3000
      - SECRET=71f4a227d52116e7455a50e63146de18174e40a55d163ff57562a344b3fca755
      - DATABASE_URL=postgresql://admin:admin@cargo-db/cargo
      - INTEGRATION_URL=https://sp.freterapido.com/api/v3
    networks:
      - cargo-net
    ports:
      - 3000:3000
    depends_on:
      - cargo-db

  metrics:
    hostname: metrics
    container_name: metrics
    build:
      context: services/metrics
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/metrics:/usr/src/app
      - $PWD/services/metrics/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    environment:
      - PORT=3010
      - SECRET=71f4a227d52116e7455a50e63146de18174e40a55d163ff57562a344b3fca755
      - DATABASE_URL=postgresql://admin:admin@cargo-db/cargo
    networks:
      - cargo-net
    ports:
      - 3010:3010
    depends_on:
      - cargo-db

  donkey-kong:
    container_name: donkey-kong
    build:
      context: services/kong
      dockerfile: Dockerfile
      target: development
    user: "kong"
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yaml
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    networks:
      - cargo-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    volumes:
      - $PWD/services/kong:/kong/declarative/
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
  